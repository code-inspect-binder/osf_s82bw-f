####### Hierarchical beta MPT with TreeBGUS #####

data{
for(s in 1:S){
  zeros[s] <- 0
}
}

 model{

 for (n in 1: subjs){

### MPT model equations:
T_E[n,1] <- theta[4,n]*theta[3,n]+theta[4,n]*(1-theta[3,n])*theta[1,n]+(1-theta[4,n])*theta[2,n]*theta[1,n]
T_E[n,2] <- (1-theta[4,n])*(1-theta[2,n])
T_E[n,3] <- theta[4,n]*(1-theta[3,n])*(1-theta[1,n])+(1-theta[4,n])*theta[2,n]*(1-theta[1,n])

T_N[n,1] <- (1-theta[4,n])*theta[2,n]*theta[1,n]
T_N[n,2] <- theta[4,n]+(1-theta[4,n])*(1-theta[2,n])
T_N[n,3] <- (1-theta[4,n])*theta[2,n]*(1-theta[1,n])

T_U[n,1] <- theta[4,n]*(1-theta[3,n])*theta[1,n]+(1-theta[4,n])*theta[2,n]*theta[1,n]
T_U[n,2] <- (1-theta[4,n])*(1-theta[2,n])
T_U[n,3] <- theta[4,n]*theta[3,n]+theta[4,n]*(1-theta[3,n])*(1-theta[1,n])+(1-theta[4,n])*theta[2,n]*(1-theta[1,n])


### Multinomial likelihood:
response.T_E[n,1:3] ~ dmulti(T_E[n,1:3],items.T_E[n])
response.T_N[n,1:3] ~ dmulti(T_N[n,1:3],items.T_N[n])
response.T_U[n,1:3] ~ dmulti(T_U[n,1:3],items.T_U[n])
}


### Hierarchical structure: 

for(s in 1:S){
  for(n in 1:subjs) {
    theta[s,n] ~ dbeta(alph[s], bet[s])
  }
}

for(s in 1:S){
  mean[s] <- alph[s]/(alph[s]+bet[s])
  sd[s] <- sqrt(alph[s]*bet[s]/(pow(alph[s]+bet[s],2)*(alph[s]+bet[s]+1)))
}

alph[1] ~ dgamma(1,.1)
bet[1] ~ dgamma(1,.1)
alph[2] ~ dgamma(1,.1)
bet[2] ~ dgamma(1,.1)
alph[3] ~ dgamma(1,.1)
bet[3] ~ dgamma(1,.1)
alph[4] ~ dgamma(1,.1)
bet[4] ~ dgamma(1,.1)

### Transformed Parameters (on group level) ###
 
 deltaDd <- mean[4]-mean[3] 
}
